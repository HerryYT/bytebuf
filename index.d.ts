/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export class ByteBuf {
  constructor(buf?: Buffer | undefined | null)
  static withInitialCapacity(initialCapacity: number): ByteBuf
  static fromByteArray(byteArray: Array<number>): ByteBuf
  clear(): void
  /** Returns the number of bytes this buffer can contain */
  getCapacity(): number
  /** u32 is enough, i64 is too much even for general use */
  setCapacity(size: number): void
  isReadable(size?: number | undefined | null): boolean
  isWriteable(size?: number | undefined | null): boolean
  isReadOnly(): boolean
  static asReadOnly(): ByteBuf
  /** Involves copying, use with caution */
  getArray(): Uint8Array
  /** Returns the buffer, zero-copy :) */
  getBuffer(): Buffer
  getReadableBytes(): number
  getWritableBytes(): number
  skipBytes(length: number): void
  readBoolean(): boolean
  readByte(): number
  readUnsignedByte(): number
  readShort(): number
  readShortLE(): number
  readUnsignedShort(): number
  readUnsignedShortLE(): number
  readMedium(): number
  writeByte(val: number): void
  writeMedium(val: number): void
  setReaderIndex(index: number): void
  getReaderIndex(): number
  /** TODO: not implemented */
  discardReadBytes(): void
  setWriterIndex(index: number): void
  getWriterIndex(): number
  setIndex(rIndex: number, wIndex: number): void
}
